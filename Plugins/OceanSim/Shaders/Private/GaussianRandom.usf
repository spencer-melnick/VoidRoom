Texture2D<float4> UniformNoiseTexture;
RWTexture2DArray<float> GaussianNoiseTexture;

static const float Pi = 3.14159265358979323846f;

[numthreads(THREADGROUPSIZE_X, THREADGROUPSIZE_Y, THREADGROUPSIZE_Z)]
void main( uint3 id : SV_DispatchThreadID )
{
	float4 NoiseSamples = UniformNoiseTexture[id.xy];
	float4 GaussianResult;

	float a0 = sqrt(-2 * log(NoiseSamples.x));
	float t0 = 2 * Pi * NoiseSamples.y;

	float a1 = sqrt(-2 * log(NoiseSamples.z));
	float t1 = 2 * Pi * NoiseSamples.w;

	GaussianNoiseTexture[uint3(id.xy, 0)] = a0 * cos(t0);
	GaussianNoiseTexture[uint3(id.xy, 1)] = a0 * sin(t0);
	GaussianNoiseTexture[uint3(id.xy, 2)] = a1 * cos(t1);
	GaussianNoiseTexture[uint3(id.xy, 3)] = a1 * sin(t1);
}