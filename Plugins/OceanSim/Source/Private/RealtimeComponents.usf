#include "/OceanSim/Private/Common.ush"

StructuredBuffer<float4> InitialComponents;
RWStructureBuffer<float2> OutputBuffer;

float Time;

float CalculateDispersion(float2 K)
{
	return sqrt(Gravity / length(K));
}

[numthreads(THREADGROUPSIZE_X, THREADGROUPSIZE_Y, THREADGROUPSIZE_Z)]
void main( uint3 id : SV_DispatchThreadID )
{
	uint Index = CalculateIndex(id.xy);
	float4 InitialSample = InitialComponents[Index];
	float K = CalculateK(id.xy);
	float w = CalculateDispersion(K);
	float2 Complex1 = ImaginaryExponent(w * Time);
	float2 Complex2 = ImaginaryExponent(-w * Time);

	OutputBuffer[Index] = ComplexMultiply(InitialSample.xy, Complex1) + ComplexMultiply(InitialSample.zw, Complex2);
}
